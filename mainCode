from sympy import *

x = Symbol("x")


def powerRule(): 
    coe_Num = int(input("I will help you with the power rule. Enter the coefficient of your function, such as ax, where a is the coefficient." ))
    power_Num = int(input("Now enter the power. such as x^2." ))
    real_deriv = diff(coe_Num * (x**power_Num),x)
    print("Your derivative is: " + str(real_deriv))

def productRule(): 
    print("Enter based on the following format. With this, you can easily identify the product rule as well: (ax^b)(cx^d) ")
   
    coeNumA = int(input("Enter the coeffiecient,a, of the first part of your equation: "))
    powerNumA = int(input("Enter the power,b, of the first part of your equation: "))
    coeNumB = int(input("Enter the coefficient,c, of the second part of your eqation: "))
    powerNumB = int(input("Enter the power,d, of the second part of your equation: "))
    
    realderiv = diff((coeNumA * (x**powerNumA)) * (coeNumB * (x**powerNumB)),x)
    print(str(realderiv))

def quotientRule(): 
    print("Enter based on the following format. With this, you can easily identify the quotient rule: (ax^b)/(cx^d)" )
    print("Enter your equation based on this format: (ax^b)/(cx^d)")
    
    a = int(input("Enter the coeffiecient,a, of the first part of your equation: "))
    b = int(input("Enter the power,b, of the first part of your equation: "))
    c = int(input("Enter the coefficient,c, of the second part of your eqation: "))
    d = int(input("Enter the power d, of the second part of your equation: "))
    
    realDeriv = diff((a * (x**b))/(c * (x**d)),x)
    print(str(realDeriv))    

def trigDeriv(): 
    coeNum = int(input("Enter the coefficient, such as 2sin(x) or 3cos(x): "))
    a = int(input("Enter the number inside the function, such as cos(2x)): "))
    
    trigs = {"1": coeNum * sin(a*x), "2": coeNum * cos(a*x), "3": coeNum * tan(a*x), "4": coeNum * csc(a*x), "5": coeNum * sec(a*x),"6": coeNum * cot(a*x)}#tangent and cotangent written in trig identity form 
    
    print("1:sin(x), 2: cos(x), 3: tan(x), 4: csc(x), 5: sec(x), 6: cot(x)")
    
    trigSel = input("From the list, choose a trig function and type its corresponding number: ")
    func = trigs[trigSel]
    realderiv = diff(trigs[trigSel],x)
    print(str(realderiv))    
    
def inverseTrig(): #review
    coeNum = int(input("Enter the coefficient, such as 2asin(x) or 3arccos(x): "))
    b = int(input("Enter the number inside the function, such as arccos(2x)): "))
    
    inTrigs = {"1": coeNum * asin(b*x), "2": coeNum * acos(b*x), "3": coeNum * atan(b*x), "4": coeNum * acsc(b*x), "5": coeNum * asec(b*x),"6": coeNum * acot(b*x)}#1 + tan(x)^2 is equal to sec(x)
    
    print("1:arcsin(x), 2: arccos(x), 3: arctan(x), 4: arccsc(x), 5: arcsec(x), 6: arccot(x)")
    
    inTrigSel = input("From the list, choose a trig function and type its corresponding number: ")
    func = inTrigs[inTrigSel]
    realderiv = diff(inTrigs[inTrigSel],x)
    print(str(realderiv))

def natLog(): 
    a = int(input("I will help you with the power rule. Enter the coefficient of your function, such as aln(x), where a is the coefficient: " ))    
    coe_Num = int(input("Enter the coefficient of your function, such as ln(b*x), where b is the coefficient: " ))
    insidePow = int(input("Now enter the inside power such as ln(x^2): " ))
    real_deriv = diff(ln(coe_Num*(x**insidePow)),x) * a
    print("Your derivative is: " + str(real_deriv))

derivType = {"POWER RULE": powerRule, "PRODUCT RULE" : productRule, "QUOTIENT RULE" : quotientRule, "TRIG DERIVATIVES": trigDeriv, "INVERSE TRIG" : inverseTrig,"NATURAL LOG" :natLog}

    
    

def truDeriv(): #seeing if input is true and in the list
    userDeriv = input('What derivative stradegy do you need help on? Product rule, quotient rule, power rule, trig derivatives, inverse trig, or natural log?: ')

    while (userDeriv.upper()) not in derivType:
        userDeriv = input("Please check your spelling and try again: ")
    derivType[userDeriv.upper()]()
       

truDeriv()
        

